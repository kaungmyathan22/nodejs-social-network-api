version: "3"
services:
  # app:
  #   build: .
  #   container_name: my-nestjs-app
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     NODE_ENV: production
  #     PROMETHEUS_PORT: 9100
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     POSTGRES_HOST: postgres
  #     POSTGRES_PORT: 5432
  #   env_file:
  #     - .env
  #   depends_on:
  #     - prometheus
  #     - grafana
  #     - postgres
  #     - redis
  #     - redis-commander
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9095:9090"
  #   volumes:
  #     - ./prometheus.yaml:/etc/prometheus/prometheus.yaml

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  postgres:
    container_name: coding-test-postgres
    image: postgres:12-bullseye
    ports:
    - "5432:5432"
    volumes:
    - ./data/postgres:/var/lib/postgresql/data
    env_file:
    - docker.env
  pgadmin:
    links:
    - postgres:postgres
    container_name: coding-test-pgadmin
    image: dpage/pgadmin4
    ports:
    - "8080:80"
    volumes:
    - ./data/pgadmin:/root/.pgadmin
    env_file:
    - docker.env
  redis:
    image: redis:latest
    container_name: coding-test-job-api-redis-container
    volumes:
    - ./data/redis-data:/data
    privileged: true
    ports:
      - "6381:6379" # Map container's Redis port to host machine's port
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: coding-test-redis-commander
    environment:
      - REDIS_PORT=6379 # The host and port of your Redis server
      - REDIS_HOST=redis # The host and port of your Redis server
    ports:
      - "8081:8081" # Map container's Redis Commander port to host machine's port
    depends_on:
      - redis
volumes:
  grafana-data:
